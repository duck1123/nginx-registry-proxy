worker_processes  1;

env NGINX_PROXY_URL;

events {
    worker_connections  1024;
}

http {
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  error_log /dev/stdout debug;
  access_log /dev/stdout;

  keepalive_timeout  65;

  # gzip  on;

  upstream web {
    server web:3000;
  }

  upstream registry {
    server registry:5000;
  }

  # map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  #   'registry/2.0' '';
  #   default        'registry/2.0';
  # }

  server {
    listen 80;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
    chunked_transfer_encoding on;

    location / {
        proxy_set_header Host               $http_host;
        proxy_set_header X-Forwarded-Host   $http_host;
        proxy_set_header X-Forwarded-Server $http_host;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  "https";
        proxy_set_header X-Original-URI     $request_uri;
        proxy_set_header X-Real-IP          $remote_addr;      
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection $connection_upgrade;
        proxy_pass http://web;
    }

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      # if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      #   return 404;
      # }

    	# If $docker_distribution_api_version is empty, the header will not be added.
    	# See the map directive above where this variable is defined.
    	# add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version;
      # 'registry/2.0';
      #  always;

    	proxy_set_header  Host              $http_host;   # required for docker client's sake
    	proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    	proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    	proxy_set_header  X-Forwarded-Proto $scheme;
    	proxy_read_timeout                  900;
    	proxy_pass                          http://registry;
    }
  }
}
